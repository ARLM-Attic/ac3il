	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with C:\Program Files (x86)\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../open64/lib//be.exe
	// nvopencc 3.2 built on 2010-11-06

	//-----------------------------------------------------------
	// Compiling C:/Users/Morten/AppData/Local/Temp/tmpxft_00000d00_00000000-11_Vector.cpp3.i (C:/Users/Morten/AppData/Local/Temp/ccBI#.a05656)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:32
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"C:/Users/Morten/AppData/Local/Temp/tmpxft_00000d00_00000000-10_Vector.cudafe2.gpu"
	.file	2	".\cuPrintf.cu"
	.file	3	"C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
	.file	4	"C:\Program Files (x86)\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../include\crt/device_runtime.h"
	.file	5	"C:\Program Files (x86)\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../include\host_defines.h"
	.file	6	"C:\Program Files (x86)\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../include\builtin_types.h"
	.file	7	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\device_types.h"
	.file	8	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\driver_types.h"
	.file	9	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\surface_types.h"
	.file	10	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\texture_types.h"
	.file	11	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\vector_types.h"
	.file	12	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\builtin_types.h"
	.file	13	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\host_defines.h"
	.file	14	"C:\Program Files (x86)\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../include\device_launch_parameters.h"
	.file	15	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\crt\storage_class.h"
	.file	16	"C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
	.file	17	"C:\Program Files (x86)\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../include\common_functions.h"
	.file	18	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\math_functions.h"
	.file	19	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\math_constants.h"
	.file	20	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\device_functions.h"
	.file	21	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\sm_11_atomic_functions.h"
	.file	22	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\sm_12_atomic_functions.h"
	.file	23	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\sm_13_double_functions.h"
	.file	24	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\sm_20_atomic_functions.h"
	.file	25	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\sm_20_intrinsics.h"
	.file	26	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\surface_functions.h"
	.file	27	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\texture_fetch_functions.h"
	.file	28	"c:\program files (x86)\nvidia gpu computing toolkit\cuda\v3.2\include\math_functions_dbl_ptx1.h"
	.file	29	"Vector.cu"


	.entry VecAdd (
		.param .u32 __cudaparm_VecAdd_A,
		.param .u32 __cudaparm_VecAdd_B,
		.param .u32 __cudaparm_VecAdd_C)
	{
	.reg .u16 %rh<3>;
	.reg .u32 %r<10>;
	.reg .f32 %f<5>;
	.loc	29	18	0
$LDWbegin_VecAdd:
	.loc	29	20	0
	cvt.s32.u16 	%r1, %tid.x;
	cvt.u16.u32 	%rh1, %r1;
	mul.wide.u16 	%r2, %rh1, 4;
	ld.param.u32 	%r3, [__cudaparm_VecAdd_A];
	add.u32 	%r4, %r3, %r2;
	ld.global.f32 	%f1, [%r4+0];
	ld.param.u32 	%r5, [__cudaparm_VecAdd_B];
	add.u32 	%r6, %r5, %r2;
	ld.global.f32 	%f2, [%r6+0];
	add.f32 	%f3, %f1, %f2;
	ld.param.u32 	%r7, [__cudaparm_VecAdd_C];
	add.u32 	%r8, %r7, %r2;
	st.global.f32 	[%r8+0], %f3;
	.loc	29	21	0
	exit;
$LDWend_VecAdd:
	} // VecAdd
	.global .align 8 .b8 restrictRules[8];
	.const .u32 globalPrintfBuffer = 0;
	.const .s32 printfBufferLength = 0;
	.global .u32 printfBufferPtr = 0;

